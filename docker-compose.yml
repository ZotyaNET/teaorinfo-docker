services:

    nginx:
        image: ${COMPOSE_PROJECT_NAME}-nginx:latest
        build:
            context: .docker/
            args:
                BUILD_ARGUMENT_ENV: dev
            dockerfile: ./nginx/Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-nginx
        restart: always
        ports:
            - "${WEB_PORT_HTTP}:80"
            - "${WEB_PORT_SSL}:443"
        volumes:
            - ./:/var/www/html:rw,cached
        depends_on:
            - laravel
        networks:
            - laravel
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 1G
                reservations:
                    cpus: '0.05'
                    memory: 100M

    laravel: &laravel-template
        image: ${COMPOSE_PROJECT_NAME}-laravel:latest
        build:
            context: .docker/8.4
            args:
                WWWGROUP: '${WWWGROUP}'
                MYSQL_CLIENT: mariadb-client
                BUILD_ARGUMENT_ENV: dev
                HOST_UID: ${HOST_UID}
                HOST_GID: ${HOST_GID}
                XDEBUG_CONFIG: ${XDEBUG_CONFIG}
            dockerfile: ./Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-laravel
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - ./:/var/www/html:cached
        depends_on:
            - mariadb
            - mail
        networks:
            - laravel
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: 4G
                reservations:
                    cpus: '1'
                    memory: 2G

    ### Cron tasks
    supervisord:
        <<: *laravel-template
        container_name: ${COMPOSE_PROJECT_NAME}-supervisord
        expose: [ ]
        command: [ "/usr/bin/supervisord" ]

    redis:
        image: 'redis:alpine'
        container_name: ${COMPOSE_PROJECT_NAME}-redis
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - ./.storage/redis-dev-data:/data
        networks:
            - laravel
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
        depends_on:
            - mariadb
            - mail
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 2G
                reservations:
                    cpus: '0.5'
                    memory: 1G

    mail:
        image: axllent/mailpit:latest
        container_name: ${COMPOSE_PROJECT_NAME}-mail
        restart: always
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - laravel
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 1G
                reservations:
                    cpus: '0.05'
                    memory: 100M

    mariadb:
        image: 'mariadb:11.4-noble'
        container_name: ${COMPOSE_PROJECT_NAME}-mariadb
        ports:
            - '${DB_PORT}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - './.storage/mariadb-dev-data:/var/lib/mysql'
            - './.docker/database/mariadb/create-testing-database.sh:/.docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - laravel
        healthcheck:
            test:
                - CMD
                - healthcheck.sh
                - '--connect'
                - '--innodb_initialized'
            retries: 3
            timeout: 5s
        deploy:
            resources:
                limits:
                    cpus: '4'
                    memory: 8G
                reservations:
                    cpus: '2'
                    memory: 4G

networks:
    laravel:
        name: laravel
